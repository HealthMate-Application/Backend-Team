# ====================== #
# === Docker Compose === #
# ====================== #
# version: "3.8"
# + Services {{{
services:
  # ++ Mongo DB {{{
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: mydb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 5
  # }}}
  # ++ Security App {{{
  sec_app:
    build:
      context: ./security-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./security-app/.env
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
  # }}}
  # ++ Crud App {{{
  crud_app:
    build:
      context: ./crud-app
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      MONGODB_URI: "mongodb://root:example@mongodb:27017/mydb?authSource=admin"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    # }}}
    # ++ Medicl Records App {{{
  medical_app:
    build:
      context: ./medical-records
      dockerfile: Dockerfile
    ports:
      - "5678:5678"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    # }}}
# }}}
# + Networks {{{
networks:
  app-network:
    driver: bridge
# }}}
# + Volumes {{{
volumes:
  mongodb_data:
# }}}
